<mah:MetroWindow x:Class="Monopoly.Editor.EditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:conv="clr-namespace:Monopoly.Converters"
        mc:Ignorable="d" Icon="/Monopoly;component/Resources/Images/Icon.png"
                 
        dialog:DialogParticipation.Register="{Binding}"
                 
        Background="#8FD5A6" TitleCharacterCasing="Normal" ShowMaxRestoreButton="False"
        Title="Monopoly board editor" Height="620" Width="900" ResizeMode="NoResize">
    
    <!-- Define information about the window headbar -->
    <!-- Draw the icon -->
    <mah:MetroWindow.IconTemplate>
        <DataTemplate>
            <Grid Background="#22000000" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                <Image Source="/Monopoly;component/Resources/Images/IconWhiteout.png" Margin="3"/>
            </Grid>
        </DataTemplate>
    </mah:MetroWindow.IconTemplate>
    
    <Grid>

        <Grid.Resources>
            <conv:BoardColumnConverter x:Key="BoardColumnConverter"/>
            <conv:BoardRowConverter x:Key="BoardRowConverter"/>
        </Grid.Resources>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="600"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>
        <!-- Depict the board in this section -->
        <Rectangle Fill="#B66F24" VerticalAlignment="Center" HorizontalAlignment="Center" Width="560" Height="560" Margin="10,10,0,0"/>
        <ItemsControl ItemsSource="{Binding Board, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="560" Height="560" Margin="0,0,10,10">
            
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button RenderTransformOrigin="0.5, 0.5" Command="{Binding DataContext.SelectProperty, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mah:MetroWindow}}}" CommandParameter="{Binding}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Flat}">
                                <Setter Property="Background" Value="DarkGray"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="0.75"/>
                                    </Trigger>
                                    <!-- Different types -->
                                    <DataTrigger Binding="{Binding Type}" Value="0">
                                        <Setter Property="Background" Value="#97C1A9"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="1">
                                        <Setter Property="Background" Value="#ABDEE6"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="2">
                                        <Setter Property="Background" Value="#8FCACA"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="3">
                                        <Setter Property="Background" Value="#F3B0C3"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="4">
                                        <Setter Property="Background" Value="#F3B0C3"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="5">
                                        <Setter Property="Background" Value="#FFC8A2"/>
                                    </DataTrigger>
                                    <!-- Corner pieces -->
                                    <DataTrigger Binding="{Binding Name}" Value="Protected">
                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                        <Setter Property="Background" Value="#44000000"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>

            <ItemsControl.ItemContainerStyle>
                <Style>

                    <Setter Property="Grid.Column" Value="{Binding Index, Converter={StaticResource BoardColumnConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                    <Setter Property="Grid.Row" Value="{Binding Index, Converter={StaticResource BoardRowConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                    <!-- Data templates must be used to display the board properly -->
                    <!-- In order to rotate the properties correctly, it must be done based on their Index through the converters -->
                    <!-- For example, if the converted index reveals that a property is along row 0 (the top row, north-east), it must be rotated 180 degrees -->

                    <Setter Property="Grid.RenderTransformOrigin" Value="0.5, 0.5"/>
                    <Style.Triggers>
                        <!-- Turn properties on north-west side of the grid 90 degrees -->
                        <DataTrigger Binding="{Binding Index, Converter={StaticResource BoardColumnConverter}, UpdateSourceTrigger=PropertyChanged}" Value="0">
                            <Setter Property="Grid.RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="90"/>
                                        <MatrixTransform Matrix="1.63636364 0 0 0.611111111 0 0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <!-- Turn properties on the north-east side of the grid 180 degrees, upside down -->
                        <DataTrigger Binding="{Binding Index, Converter={StaticResource BoardRowConverter}, UpdateSourceTrigger=PropertyChanged}" Value="0">
                            <Setter Property="Grid.RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <!-- Turn properties on the south-east side of the grid 270 degrees -->
                        <DataTrigger Binding="{Binding Index, Converter={StaticResource BoardColumnConverter}, UpdateSourceTrigger=PropertyChanged}" Value="10">
                            <Setter Property="Grid.RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="270"/>
                                        <MatrixTransform Matrix="1.63636364 0 0 0.611111111 0 0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- However, the corner pieces (GO, Free Parking, Jail and Go To Jail) are exempt from such rotation needs -->
                        <!-- This is because their tiles are already square. As a result, their rotations must be reversed. -->

                        <!-- Reverse the rotation of closest, down-most square, applied from a previous DataTrigger -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Index, Converter={StaticResource BoardRowConverter}, UpdateSourceTrigger=PropertyChanged}" Value="10"/>
                                <Condition Binding="{Binding Index, Converter={StaticResource BoardColumnConverter}, UpdateSourceTrigger=PropertyChanged}" Value="10"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Grid.RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="0"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <!-- Reverse the rotation of the right-most square, applied from a previous DataTrigger -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Index, Converter={StaticResource BoardRowConverter}, UpdateSourceTrigger=PropertyChanged}" Value="0"/>
                                <Condition Binding="{Binding Index, Converter={StaticResource BoardColumnConverter}, UpdateSourceTrigger=PropertyChanged}" Value="10"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Grid.RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="270"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <!-- Reverse the rotation of the left-most square, applied from a previous DataTrigger -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Index, Converter={StaticResource BoardRowConverter}, UpdateSourceTrigger=PropertyChanged}" Value="10"/>
                                <Condition Binding="{Binding Index, Converter={StaticResource BoardColumnConverter}, UpdateSourceTrigger=PropertyChanged}" Value="0"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Grid.RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="90"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                    </Style.Triggers>
                </Style>
            </ItemsControl.ItemContainerStyle>

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid Background="LightGray">
                        <!-- Column and row definitions for the game -->
                        <!-- On a Monopoly grid, the proportions of W:H are 11:18 -->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18*"/>
                            <ColumnDefinition Width="11*"/>
                            <ColumnDefinition Width="11*"/>
                            <ColumnDefinition Width="11*"/>
                            <ColumnDefinition Width="11*"/>
                            <ColumnDefinition Width="11*"/>
                            <ColumnDefinition Width="11*"/>
                            <ColumnDefinition Width="11*"/>
                            <ColumnDefinition Width="11*"/>
                            <ColumnDefinition Width="11*"/>
                            <ColumnDefinition Width="18*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="18*"/>
                            <RowDefinition Height="11*"/>
                            <RowDefinition Height="11*"/>
                            <RowDefinition Height="11*"/>
                            <RowDefinition Height="11*"/>
                            <RowDefinition Height="11*"/>
                            <RowDefinition Height="11*"/>
                            <RowDefinition Height="11*"/>
                            <RowDefinition Height="11*"/>
                            <RowDefinition Height="11*"/>
                            <RowDefinition Height="18*"/>
                        </Grid.RowDefinitions>
                        <!-- End column and row definitions -->
                    </Grid>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
        
        <!-- Establish the controls and editing area in this section -->
        <Grid Grid.Column="2" Background="#252525">
            <Grid.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="White"/>
                </Style>
            </Grid.Resources>
            <StackPanel Margin="10">
                <TextBlock Text="Board editor" FontSize="20" Margin="0,0,0,5"/>
                <DockPanel LastChildFill="False">
                    <DockPanel.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Flat}">
                            <Setter Property="Margin" Value="0,0,5,0"/>
                        </Style>
                    </DockPanel.Resources>
                    <Button Content="New" Command="{Binding NewBoard}"/>
                    <Button Content="Load board" Command="{Binding LoadSavedBoard}"/>
                    <Button Content="Save board" Command="{Binding SaveBoard}"/>
                </DockPanel>
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Style>
                    </StackPanel.Resources>
                    <DockPanel Margin="0,10">
                        <TextBlock Text="Board name: "/>
                        <TextBox Text="{Binding BoardName, UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>
                    <DockPanel>
                        <TextBlock Text="Creator: "/>
                        <TextBox Width="100" Text="{Binding Creator, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="  Language: "/>
                        <TextBox Text="{Binding Language, UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>
                </StackPanel>
                <Separator Margin="0,10"/>
                <TextBlock Text="" FontSize="16">
                    <Run Text="{Binding SelectedProperty.Index, UpdateSourceTrigger=PropertyChanged, StringFormat={}Tile index {0},FallbackValue=Please select a tile to begin}"/>
                    <Run>
                        <Run.Style>
                            <Style TargetType="{x:Type Run}">
                                <Setter Property="Text" Value="{Binding SelectedProperty.Name, UpdateSourceTrigger=PropertyChanged, StringFormat={}({0})}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedProperty.Name, UpdateSourceTrigger=PropertyChanged}" Value="{x:Null}">
                                        <Setter Property="Text" Value=""/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SelectedProperty.Name, UpdateSourceTrigger=PropertyChanged}" Value="">
                                        <Setter Property="Text" Value=""/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Run.Style>
                    </Run>
                </TextBlock>
                <ScrollViewer Height="358">
                    <ScrollViewer.Style>
                        <Style TargetType="{x:Type ScrollViewer}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedProperty.Index}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger> 
                            </Style.Triggers>
                        </Style>
                    </ScrollViewer.Style>
                    <StackPanel Margin="0,10,5,10" DataContext="{Binding SelectedProperty}">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type DockPanel}">
                                <Setter Property="Margin" Value="0,0,0,3"/>
                            </Style>
                            <Style x:Key="CollapseUnlessProperty" TargetType="{x:Type DockPanel}">
                                <Setter Property="Margin" Value="0,0,0,3"/>
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Type, UpdateSourceTrigger=PropertyChanged}" Value="3">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type, UpdateSourceTrigger=PropertyChanged}" Value="4">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type, UpdateSourceTrigger=PropertyChanged}" Value="5">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="RestoreIfTaxation" BasedOn="{StaticResource CollapseUnlessProperty}" TargetType="{x:Type DockPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Type, UpdateSourceTrigger=PropertyChanged}" Value="5">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Margin" Value="0,0,10,0"/>
                            </Style>
                        </StackPanel.Resources>
                        <!-- Using another stackpanel to allow it to be hidden/scrolled when necessary -->
                        <DockPanel>
                            <TextBlock Text="This tile is a"/>
                            <ComboBox SelectedIndex="{Binding Type, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding DataContext.InvokeSelectionUpdates, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ComboBoxItem Content="Residential location"/>
                                <ComboBoxItem Content="Train station"/>
                                <ComboBoxItem Content="Utility property"/>
                                <ComboBoxItem Content="Chance tile"/>
                                <ComboBoxItem Content="Community Chest tile"/>
                                <ComboBoxItem Content="Taxation tile"/>
                            </ComboBox>
                        </DockPanel>
                        <DockPanel Style="{StaticResource RestoreIfTaxation}">
                            <TextBlock Text="and is called"/>
                            <TextBox MaxLength="24" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                        </DockPanel>
                        <DockPanel Style="{StaticResource CollapseUnlessProperty}">
                            <TextBlock Text="a member of the set"/>
                            <TextBox MaxLength="24" Text="{Binding Set, UpdateSourceTrigger=PropertyChanged}"/>
                        </DockPanel>
                        <DockPanel Style="{StaticResource CollapseUnlessProperty}">
                            <TextBlock Text="with color code #"/>
                            <TextBox MaxLength="6" Text="{Binding PropertyHex, UpdateSourceTrigger=PropertyChanged}"/>
                        </DockPanel>
                        <DockPanel Style="{StaticResource CollapseUnlessProperty}">
                            <TextBlock Text="(errors may occur if a set's color codes are not unified)" FontSize="10" Foreground="Gray"/>
                        </DockPanel>
                        <DockPanel Style="{StaticResource RestoreIfTaxation}">
                            <TextBlock Text="with a price tag of £"/>
                            <TextBox MaxLength="6" Text="{Binding Price, UpdateSourceTrigger=PropertyChanged}"/>
                        </DockPanel>
                        <DockPanel>
                            <DockPanel.Style>
                                <Style BasedOn="{StaticResource CollapseUnlessProperty}" TargetType="{x:Type DockPanel}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type, UpdateSourceTrigger=PropertyChanged}" Value="2">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type, UpdateSourceTrigger=PropertyChanged}" Value="1">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
                            <TextBlock Text="and adding a house costs £"/>
                            <TextBox MaxLength="6" Text="{Binding HouseIncrementationCost, UpdateSourceTrigger=PropertyChanged}"/>
                        </DockPanel>
                        <!-- Residential rent tiers -->
                        <StackPanel>
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="0">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Text="Residential payments" FontSize="14"/>
                            <TextBlock Text="Please enter, starting with the lowest value (e.g. no houses/no other stations owned), the rent that should be paid on this property." TextWrapping="Wrap" Margin="0,0,0,5"/>
                            <!-- All the tiers -->
                            <DockPanel HorizontalAlignment="Right">
                                <TextBlock>
                                <Run Text="NONE" Foreground="White"/>
                                </TextBlock>
                                <TextBox Text="{Binding Rent[0], UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Right"/>
                            </DockPanel>
                            <DockPanel HorizontalAlignment="Right">
                                <TextBlock>
                                <icons:PackIconMaterial Kind="Home"/>
                                </TextBlock>
                                <TextBox Text="{Binding Rent[1], UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Right"/>
                            </DockPanel>
                            <DockPanel HorizontalAlignment="Right">
                                <TextBlock>
                                <icons:PackIconMaterial Kind="Home"/>
                                <icons:PackIconMaterial Kind="Home"/>
                                </TextBlock>
                                <TextBox Text="{Binding Rent[2], UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Right"/>
                            </DockPanel>
                            <DockPanel HorizontalAlignment="Right">
                                <TextBlock>
                                <icons:PackIconMaterial Kind="Home"/>
                                <icons:PackIconMaterial Kind="Home"/>
                                <icons:PackIconMaterial Kind="Home"/>
                                </TextBlock>
                                <TextBox Text="{Binding Rent[3], UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Right"/>
                            </DockPanel>
                            <DockPanel HorizontalAlignment="Right">
                                <TextBlock>
                                <icons:PackIconMaterial Kind="Home"/>
                                <icons:PackIconMaterial Kind="Home"/>
                                <icons:PackIconMaterial Kind="Home"/>
                                <icons:PackIconMaterial Kind="Home"/>
                                </TextBlock>
                                <TextBox Text="{Binding Rent[4], UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Right"/>
                            </DockPanel>
                            <DockPanel HorizontalAlignment="Right">
                                <TextBlock>
                                <Run Text="HOTEL" Foreground="White"/>
                                </TextBlock>
                                <TextBox Text="{Binding Rent[5], UpdateSourceTrigger=PropertyChanged}" Width="40" HorizontalAlignment="Right"/>
                            </DockPanel>
                        </StackPanel>
                        <!-- Station rent tiers -->
                        <StackPanel>
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="1">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Text="Train station rent tiers" FontSize="14"/>
                            <TextBlock Text="Please enter, starting with the lowest value (e.g. no other stations owned), the amount of rent that should be paid per owned station." TextWrapping="Wrap" Margin="0,0,0,10"/>
                            <!-- Dynamically generated -->
                            <ScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Visible" Height="40">
                                <ItemsControl ItemsSource="{Binding DataContext.StationRents, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mah:MetroWindow}}}">

                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel>
                                                <TextBlock Text="£" Margin="0,0,5,0" VerticalAlignment="Center"/>
                                                <TextBox Text="{Binding Path=., UpdateSourceTrigger=PropertyChanged}" Margin="0,0,10,0"/>
                                            </DockPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>

                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <DockPanel LastChildFill="False"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>

                                </ItemsControl>
                            </ScrollViewer>
                        </StackPanel>
                        <!-- Utility rent tiers -->
                        <StackPanel>
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="2">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Text="Utility rent multipliers" FontSize="14"/>
                            <TextBlock Text="Please enter, starting with the lowest value (e.g. no other utilities owned), the dice-roll multiplier that should be applied per owned utility." TextWrapping="Wrap" Margin="0,0,0,10"/>
                            <!-- Dynamically generated -->
                            <ScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Visible" Height="40">
                                <ItemsControl ItemsSource="{Binding DataContext.UtilityRents, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mah:MetroWindow}}}">

                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel>
                                                <TextBlock Text="x" Margin="0,0,5,0" VerticalAlignment="Center"/>
                                                <TextBox Text="{Binding Path=., UpdateSourceTrigger=PropertyChanged}" Margin="0,0,10,0"/>
                                            </DockPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>

                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <DockPanel LastChildFill="False"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>

                                </ItemsControl>
                            </ScrollViewer>
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Rectangle}">
                            <Setter Property="Width" Value="16"/>
                            <Setter Property="Height" Value="16"/>
                            <Setter Property="Margin" Value="0,0,5,0"/>
                        </Style>
                        <Style TargetType="{x:Type DockPanel}">
                            <Setter Property="Margin" Value="0,5,0,0"/>
                        </Style>
                    </StackPanel.Resources>
                    <DockPanel>
                        <Rectangle Fill="#97C1A9"/>
                        <TextBlock Text="Residential property"/>
                    </DockPanel>
                    <DockPanel>
                        <Rectangle Fill="#ABDEE6"/>
                        <TextBlock Text="Train station"/>
                    </DockPanel>
                    <DockPanel>
                        <Rectangle Fill="#8FCACA"/>
                        <TextBlock Text="Utility property"/>
                    </DockPanel>
                    <DockPanel>
                        <Rectangle Fill="#F3B0C3"/>
                        <TextBlock Text="Chance or community chest"/>
                    </DockPanel>
                    <DockPanel>
                        <Rectangle Fill="#FFC8A2"/>
                        <TextBlock Text="Taxation square"/>
                    </DockPanel>
                </StackPanel>
            </StackPanel>
        </Grid>
    </Grid>
</mah:MetroWindow>
